
Copyright: (c) 2020 - 2021 Seagate Technology LLC and/or its its Affiliates,
All Rights Reserved

This software is subject to the terms of the Mozilla Public License, v. 2.0.
If a copy of the MPL was not distributed with this file, You can obtain
one at http://mozilla.org/MPL/2.0/.


1. Build MIO library

Uncompress the source code package.

Run the following steps to build MIO library and examples.
(1) ./autogen.sh
(2) ./configure
    if you install Motr rpms in a customized directory such as your home
    directory or build Motr from source, run configure like this

    ./configure --with-libmotr=libmotr_directory --with-motr-headers=motr_headers_directory

(3) make

2. Run MIO examples

MIO source code is shipped with varied examples.

mio_rw_threads starts specified number of READ/WRITE threads. WRITE threads
create MIO objects and write data to them, and then inform the READ trheads
to read the written objects. READ threads will verify the data fetched from
objects.

Run mio_rw_threads following the steps below:
(1) Start Motr (follow the Cortx-motr instruction)

(2) cd tests

MIO provides a sample configuration file mio_config.yaml in this directory.
Edit mio_config.yaml to reflect Motr configurations in your system:
(a) replace the Motr client local address, MOTR_INST_ADDR, to yours.
(b) replace MOTR_HA_ADDR with your HA address.
(c) MOTR_PROFILE and MOTR_PROCESS_FID (usually no need to change these 2 parameters)
(d) replace the MOTR_USER_GROUP with the Motr user group in your system.

Methods to get the above parameters:
(a) hctl motr status
(b) checkout /etc/motr/sys-*/conf.xc to search strings for M0_CST_HA
(c) if your system is shipped with Motr sample apps, run
    motr-sample-app-dir/scripts/c0appzrcgen 

(3) add your account to Motr group then run mio_rw_thread
    or run it as root

sudo ../examples/mio_rw_threads -s 4096 -c 1 -n 10 -t 1 -y ./mio_config.yaml -o 1:12346800

Usage of mio_rw_thread
  -o, --object         FID       Starting object ID
  -n, --nr_objs        INT       The number of objects
  -s, --block-size     INT       block size in bytes or with suffix b/k/m/g/K/M/G 
  -c, --block-count    INT       number of blocks written to an object with suffix b/k/m/g/K/M/G
  -t, --threads                  Number of threads
  -y, --mio_conf                 MIO YAML configuration file
  -h, --help                     shows this help text and exit

All MIO examples use 2 uint64_t to represent an object ID.

(4) MIO also provides with test scripts to test basic functionalities.
    Run the scripts as root or users of Motr group as above.

sudo ./mio_run_tests.sh
